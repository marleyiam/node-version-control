FORMAT: 1A
HOST: http://api.reply.com/

# Reply API

This is the API spec for the Reply app.

# Reply API Root [/]

This resource does not have any attributes. It only returns some details about the API.

## Retrieve the API Version[GET]

+ Response 200 (application/json)

        {
            "version": "0.0.1"
        }

## Group Users

Resources related to users in the API.

## User [/users/{user_id}]

A User object has the following attributes:

+ id - Unique identifier
+ username - Username
+ forename - Forename (Conditional to privacy settings).
+ surname - Surname (Conditional to privacy settings).

+ Parameters
    + user_id: 1 (required, string) - ID of the User in form of a string

### View a User [GET]

+ Response 200 (application/json)

        {
            "id": "00000000001",
            "username": "ffrankson",
            "forename": "Frankie",
            "surname": "Frankson"
        }

## User questions asked [/users/{user_id}/questions]

+ Parameters
    + user_id: 1 (required, string) - The ID of the User in form of a string

### View a list of users questions asked [GET]

Returns a JSON array of questions that have been asked by the user specified.

+ Response 200 (application/json)
    
        [
            {
                "id":"0220220x02",
                "user":"00000000001",
                "user_model":{
                    "id":"00000000001",
                    "firstname":"Frankie",
                    "surname":"Frankson",
                    "username":"ffrankson"
                },
                "datetime":"2015-07-23T12:02:11+01:00",
                "content":"Whats your favourite colour tomatoes?",
                "attachments":["dddlddd22dl2"],
                "reply":{
                    "id":"0110110110x02",
                    "content":"I do like the red ones. Here's a video of some red tomatoes",
                    "attachments":"ossosso22d9do2",
                    "datetime":"2015-07-23T14:03:37+01:00"
                }
            }
        ]

## User feed [/users/{user_id}/feed]
### View a users feed [GET]

Returns a JSON array of questions currently present on the feed

+ filter: (optional, string) - Filter by string
+ mindate: (optional, string) - Minimum date in ISO format
+ maxdate: (optional, string) - Maximum date in ISO format
+ pagenum: (optional, integer) - Page number (Default:0)
+ pagesize: (optional, integer) - Posts per page (Default:10, 0 for all)

+ Parameters
    + user_id: 1 (required, string) - The ID of the User in form of a string

+ Request (application/json)
    
        {   
            "filter":[">2015-07-23T14:03:37+01:00", "%Tomatoes"]
        }

+ Response 200

        [
            {
                "id":"0002022xp220",
                "user_id":"00000000001",
                "user_model":{
                    "id":"00000000001",
                    "firstname":"Frankie",
                    "surname":"Frankson",
                    "username":"ffrankson"
                },
                "datetime":"2015-07-23T12:02:11+01:00",
                "content":"Whats your favourite colour tomatoes?",
                "attachments":["dddlddd22dl2"],
                "reply":{
                    "id":"0110110110x02",
                    "content":"I do like the red ones. Here's a video of some red tomatoes",
                    "attachments":"ossosso22d9do2",
                    "datetime":"2015-07-23T14:03:37+01:00"
                }
            }
        ]
        
## Group Questions

A Question object has the following attributes:

+ id - Unique identifier
+ user_id - ID of user who asked the question
+ user_model - Model of user who asked the question
+ datetime - Date that the question was asked
+ content - Question content
+ Attachments - IDs of attached resources
+ Reply - Model of reply

A reply model has the following attributes

+ id - ID of user who replied
+ content - Content of reply
+ attachments - Attached resources to the reply
+ datetime - Date of reply

## Questions [/questions]

### Get most recent questions [GET]

Returns an array of the most recently asked questions

+ Response 200 (application/json)

        [
            {
                "id":"0220220x02",
                "user":"00000000001",
                "user_model":{
                    "id":"00000000001",
                    "firstname":"Frankie",
                    "surname":"Frankson",
                    "username":"ffrankson"
                },
                "datetime":"2015-07-23T12:02:11+01:00",
                "content":"Whats your favourite colour tomatoes?",
                "attachments":["dddlddd22dl2"],
                "reply":{
                    "id":"0110110110x02",
                    "content":"I do like the red ones. Here's a video of some red tomatoes",
                    "attachments":"ossosso22d9do2",
                    "datetime":"2015-07-23T14:03:37+01:00"
                }
            }
        ]

### Post a question [POST]

Returns the ID of the question along with a message, or throws an appropriate error.

+ Request (application/json)
    
        {   
            "content":"Hows life?"
        }

+ Response 201 (application/json)
    
        {   
            "id":"0020ds0d0d0dd2",
            "message":"Your question is currently awaiting approval from our admin team"
        }

+ Response 403 (application/json)
    
        {   
            "message":"You have been blocked from asking this user questions."
        }

+ Response 405 (application/json)
    
        {   
            "message":"You have insufficient credits to ask this question."
        }

## Specific Questions [/questions/{question_id}]

+ Parameters
    + question_id: 1 (required, string) - ID of the Question in form of a string
    

### View a Question [GET]

+ Response 200 (application/json)

        {
            "id": "00000000001",
            "username": "ffrankson",
            "forename": "Frankie",
            "surname": "Frankson"
        }


## User questions recieved [/questions/user/{user_id}]

+ Parameters
    + user_id: 1 (required, string) - The ID of the User in form of a string
    
    
### View a list of users questions recieved [GET]

Returns a JSON array of questions that have been recieved to the user specified.

+ from: (optional, string) - Filter by user ID

+ Request (application/json)
    
        {   
            "from":"00000000001"
        }

+ Response 200 (application/json)
    
        [
            {
                "id":"0220220x02",
                "user":"00000000001",
                "user_model":{
                    "id":"00000000001",
                    "firstname":"Frankie",
                    "surname":"Frankson",
                    "username":"ffrankson"
                },
                "datetime":"2015-07-23T12:02:11+01:00",
                "content":"Whats your favourite colour tomatoes?",
                "attachments":["dddlddd22dl2"],
                "reply":{
                    "id":"0110110110x02",
                    "content":"I do like the red ones. Here's a video of some red tomatoes",
                    "attachments":"ossosso22d9do2",
                    "datetime":"2015-07-23T14:03:37+01:00"
                }
            }
        ]


    